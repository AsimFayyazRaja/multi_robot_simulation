DWAPlannerROS:

  # Robot Configuration Parameters
  max_vel_x: 0.82         # Maximum velocity in the x direction
  min_vel_x: 0.2          # Minimum velocity in the x direction

  max_vel_y: 0.22         # Maximum velocity in the y direction
  min_vel_y: 0.00         # Minimum velocity in the y direction

  # The velocity when the robot is moving in a straight line
  max_vel_trans: 0.82     # Maximum translational velocity
  min_vel_trans: 0.1      # Minimum translational velocity

  max_vel_theta: 2.75     # Maximum rotational velocity
  min_vel_theta: 1.37     # Minimum rotational velocity

  acc_lim_x: 2.5          # Linear acceleration limit in x
  acc_lim_y: 0.0          # Linear acceleration limit in y
  acc_lim_theta: 3.2      # Angular acceleration limit

  # Goal Tolerance Parameters
  xy_goal_tolerance: 0.05 # Allowed position error in meters to consider the goal reached
  yaw_goal_tolerance: 0.05 # Allowed orientation error in radians to consider the goal reached
  latch_xy_goal_tolerance: false # Latch tolerance to stop movement once reached

  # Forward Simulation Parameters
  sim_time: 1.5           # Time to simulate forward in seconds
  vx_samples: 20          # Number of samples for velocity in x
  vy_samples: 0           # Number of samples for velocity in y
  vth_samples: 40         # Number of samples for angular velocity
  controller_frequency: 10.0 # Frequency at which the controller is executed

  # Trajectory Scoring Parameters
  path_distance_bias: 32.0 # Weight for the distance to path
  goal_distance_bias: 20.0 # Weight for the distance to goal
  occdist_scale: 0.02      # Weight for the obstacle cost
  forward_point_distance: 0.325 # Distance for the forward point
  stop_time_buffer: 0.2    # Time to stop before hitting an obstacle
  scaling_speed: 0.25      # Speed at which scaling occurs
  max_scaling_factor: 0.2  # Maximum factor for scaling

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05 # Distance to reset oscillation

  # Debugging
  publish_traj_pc: true    # Publish trajectory as point cloud
  publish_cost_grid_pc: true # Publish cost grid as point cloud
